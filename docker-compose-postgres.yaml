services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 5s
      retries: 5

  bloock-managed-api:
    image: bloock/managed-api:latest
    container_name: bloock-managed-api
    volumes:
      - ./config.yml:/go/bin/config.yml:ro
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      BLOOCK_DB_CONNECTION_STRING: "postgres://postgres:admin@tcp(postgres:5432)/managed"
      BLOOCK_API_KEY: ""
      BLOOCK_CLIENT_ENDPOINT_URL: ""
      BLOOCK_WEBHOOK_SECRET_KEY: ""
      BLOOCK_AUTHENTICITY_PRIVATE_KEY: ""
      BLOOCK_AUTHENTICITY_PUBLIC_KEY: ""
      BLOOCK_API_HOST: "0.0.0.0"
      BLOOCK_API_PORT: "8080"
      BLOOCK_API_DEBUG_MODE: false
      BLOOCK_FILE_DIR: ""
