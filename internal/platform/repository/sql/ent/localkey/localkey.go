// Code generated by ent, DO NOT EDIT.

package localkey

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the localkey type in the database.
	Label = "local_key"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLocalKey holds the string denoting the local_key field in the database.
	FieldLocalKey = "local_key"
	// FieldKeyType holds the string denoting the key_type field in the database.
	FieldKeyType = "key_type"
	// Table holds the table name of the localkey in the database.
	Table = "local_keys"
)

// Columns holds all SQL columns for localkey fields.
var Columns = []string{
	FieldID,
	FieldLocalKey,
	FieldKeyType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the KeyID queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByKeyType orders the results by the key_type field.
func ByKeyType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKeyType, opts...).ToFunc()
}
