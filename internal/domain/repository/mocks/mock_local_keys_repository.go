// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/repository/local_keys_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	domain "bloock-managed-api/internal/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockLocalKeysRepository is a mock of LocalKeysRepository interface.
type MockLocalKeysRepository struct {
	ctrl     *gomock.Controller
	recorder *MockLocalKeysRepositoryMockRecorder
}

// MockLocalKeysRepositoryMockRecorder is the mock recorder for MockLocalKeysRepository.
type MockLocalKeysRepositoryMockRecorder struct {
	mock *MockLocalKeysRepository
}

// NewMockLocalKeysRepository creates a new mock instance.
func NewMockLocalKeysRepository(ctrl *gomock.Controller) *MockLocalKeysRepository {
	mock := &MockLocalKeysRepository{ctrl: ctrl}
	mock.recorder = &MockLocalKeysRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalKeysRepository) EXPECT() *MockLocalKeysRepositoryMockRecorder {
	return m.recorder
}

// FindKeyByID mocks base method.
func (m *MockLocalKeysRepository) FindKeyByID(ctx context.Context, id uuid.UUID) (*domain.LocalKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindKeyByID", ctx, id)
	ret0, _ := ret[0].(*domain.LocalKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindKeyByID indicates an expected call of FindKeyByID.
func (mr *MockLocalKeysRepositoryMockRecorder) FindKeyByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindKeyByID", reflect.TypeOf((*MockLocalKeysRepository)(nil).FindKeyByID), ctx, id)
}

// GetKeys mocks base method.
func (m *MockLocalKeysRepository) FindKeys(ctx context.Context) ([]domain.LocalKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindKeys", ctx)
	ret0, _ := ret[0].([]domain.LocalKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeys indicates an expected call of GetKeys.
func (mr *MockLocalKeysRepositoryMockRecorder) GetKeys(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindKeys", reflect.TypeOf((*MockLocalKeysRepository)(nil).FindKeys), ctx)
}

// SaveKey mocks base method.
func (m *MockLocalKeysRepository) SaveKey(ctx context.Context, localKey domain.LocalKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveKey", ctx, localKey)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveKey indicates an expected call of SaveKey.
func (mr *MockLocalKeysRepositoryMockRecorder) SaveKey(ctx, localKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveKey", reflect.TypeOf((*MockLocalKeysRepository)(nil).SaveKey), ctx, localKey)
}
