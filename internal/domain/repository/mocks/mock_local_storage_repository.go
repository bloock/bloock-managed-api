// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/repository/local_storage_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLocalStorageRepository is a mock of LocalStorageRepository interface.
type MockLocalStorageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockLocalStorageRepositoryMockRecorder
}

// MockLocalStorageRepositoryMockRecorder is the mock recorder for MockLocalStorageRepository.
type MockLocalStorageRepositoryMockRecorder struct {
	mock *MockLocalStorageRepository
}

// NewMockLocalStorageRepository creates a new mock instance.
func NewMockLocalStorageRepository(ctrl *gomock.Controller) *MockLocalStorageRepository {
	mock := &MockLocalStorageRepository{ctrl: ctrl}
	mock.recorder = &MockLocalStorageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalStorageRepository) EXPECT() *MockLocalStorageRepositoryMockRecorder {
	return m.recorder
}

// Retrieve mocks base method.
func (m *MockLocalStorageRepository) Retrieve(ctx context.Context, directory, filename string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", ctx, directory, filename)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockLocalStorageRepositoryMockRecorder) Retrieve(ctx, directory, filename interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockLocalStorageRepository)(nil).Retrieve), ctx, directory, filename)
}

// Save mocks base method.
func (m *MockLocalStorageRepository) Save(ctx context.Context, data []byte, filename string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, data, filename)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockLocalStorageRepositoryMockRecorder) Save(ctx, data, filename interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockLocalStorageRepository)(nil).Save), ctx, data, filename)
}
